; Generated by the Nibble compiler.

SECTION .rodata


SECTION .data

SECTION .text
global _start
_start:
xor rbp, rbp
mov edi, dword [rsp]
lea rsi, [rsp + 8]
lea rdx, [rsp + 8*rdi + 16]
xor eax, eax
call main
mov edi, eax
mov rax, 60
syscall
global _nibble_#writeout
_nibble_#writeout:
push rbp 
mov rbp, rsp
xchg rdi, rsi
mov rax, 1
mov rdx, rdi
mov rdi, 1
syscall
mov rsp, rbp
pop rbp
ret
global _nibble_#readin
_nibble_#readin:
push rbp 
mov rbp, rsp
xchg rdi, rsi
mov rax, 0
mov rdx, rdi
mov rdi, 0
syscall
mov rsp, rbp
pop rbp
ret



global main
main:
  push rbp
  mov rbp, rsp
  sub rsp, 32
  L.0.0:
  mov dword [rbp + -4], 0x0
  mov dword [rbp + -8], 0x0
  mov dword [rbp + -12], 0x0
  mov dword [rbp + -16], 0x0
  mov dword [rbp + -20], 0x0
  L.0.1:
  mov r10d, dword [rbp + -4]
  add r10d, 0x1
  mov dword [rbp + -4], r10d
  cmp dword [rbp + -4], 0xA
  jne L.0.3
  L.0.2:
  jmp L.0.9
  L.0.3:
  cmp dword [rbp + -4], 0xA
  jl L.0.1
  L.0.4:
  mov dword [rbp + -4], 0x0
  jmp L.0.1
  L.0.5:
  mov r10d, dword [rbp + -8]
  add r10d, 0x1
  mov dword [rbp + -8], r10d
  cmp dword [rbp + -8], 0xA
  jne L.0.7
  L.0.6:
  jmp L.0.10
  L.0.7:
  cmp dword [rbp + -8], 0xA
  jl L.0.9
  L.0.8:
  mov dword [rbp + -8], 0x0
  L.0.9:
  cmp dword [rbp + -8], 0x14
  jl L.0.5
  L.0.10:
  L.0.11:
  mov r10d, dword [rbp + -12]
  add r10d, 0x1
  mov dword [rbp + -12], r10d
  cmp dword [rbp + -12], 0x9
  jle L.0.13
  L.0.12:
  jmp L.0.18
  L.0.13:
  cmp dword [rbp + -12], 0xA
  jl L.0.15
  L.0.14:
  mov dword [rbp + -12], 0x0
  L.0.15:
  cmp dword [rbp + -12], 0x14
  jge L.0.18
  L.0.16:
  cmp dword [rbp + -8], 0xA
  jne L.0.18
  L.0.17:
  cmp dword [rbp + -4], 0xA
  je L.0.11
  L.0.18:
  mov dword [rbp + -24], 0x0
  jmp L.0.24
  L.0.19:
  cmp dword [rbp + -24], 0xA
  jne L.0.21
  L.0.20:
  mov r10d, dword [rbp + -24]
  mov dword [rbp + -16], r10d
  jmp L.0.25
  L.0.21:
  cmp dword [rbp + -24], 0xA
  jl L.0.23
  L.0.22:
  mov dword [rbp + -16], 0x0
  L.0.23:
  mov r10d, dword [rbp + -24]
  add r10d, 0x1
  mov dword [rbp + -24], r10d
  L.0.24:
  cmp dword [rbp + -24], 0x14
  jl L.0.19
  L.0.25:
  mov dword [rbp + -24], 0x0
  L.0.26:
  cmp dword [rbp + -24], 0x5
  jne L.0.28
  L.0.27:
  mov r10d, dword [rbp + -24]
  mov dword [rbp + -20], r10d
  jmp L.0.31
  L.0.28:
  cmp dword [rbp + -24], 0x5
  jl L.0.30
  L.0.29:
  mov dword [rbp + -20], 0x0
  L.0.30:
  mov r10d, dword [rbp + -24]
  add r10d, 0x1
  mov dword [rbp + -24], r10d
  jmp L.0.26
  L.0.31:
  mov r10d, dword [rbp + -4]
  add r10d, dword [rbp + -8]
  add r10d, dword [rbp + -12]
  add r10d, dword [rbp + -16]
  add r10d, dword [rbp + -20]
  mov eax, r10d
  end.main:
  mov rsp, rbp
  pop rbp
  ret
