proc add_variadic(offset : char, nums : ..int) => int {
    var i : usize = 0;
    var result : int = 0;

    while (i < nums.size) {
        result = result + nums.data[i];
        
        i = i + 1;
    }

    return result + offset;
}

struct Vec3 {
    x : int;
    y : int;
    z : int;
}

proc add_v3(vecs : ..Vec3) => Vec3 {
    var i : usize = 0;
    var r : Vec3;
    r.x = 0;
    r.y = 0;
    r.z = 0;

    while (i < vecs.size) {
        r.x = r.x + vecs.data[i].x;
        r.y = r.y + vecs.data[i].y;
        r.z = r.z + vecs.data[i].z;

        i = i + 1;
    }

    return r;
}

proc add_any_ints(args : ..any) => int {
    var r : int = 0;

    var i : usize = 0;

    while (i < args.size) {
        if (args.data[i].type == #typeid(int)) {
            var val : int = *(args.data[i].ptr :> ^int);
            r = r + val;
        }

        i = i + 1;
    }

    return r;
}

proc main() => int {
    var r := add_variadic(6, 1, 2, 3);

    var a : Vec3;
    a.x = 1; a.y = 2; a.z = 3;
    var b : Vec3 = a;
    var c : Vec3 = b;

    var v := add_v3(a, b, c);

    var int1 : int = 1;

    return r + (v.x + v.y + v.z) + add_any_ints(int1, 2, int1 + 1, int1 == 1, 'a'); // 12 + 18 + (1 + 2 + 2 + 1) = 36
}
