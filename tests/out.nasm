; Generated by the Nibble compiler.
; Compile with NASM and link to libc:
; nasm -f elf64 -F dwarf out.asm
; ld -o out -dynamic-linker /lib/ld-linux-x86-64.so.2 /usr/lib/crt1.o /usr/lib/crti.o -lc out.o /usr/lib/crtn.o
; ld -o out -dynamic-linker /lib64/ld-linux-x86-64.so.2 /usr/lib/x86_64-linux-gnu/crt1.o /usr/lib/x86_64-linux-gnu/crti.o -lc out.o /usr/lib/x86_64-linux-gnu/crtn.o
; See:
; https://stackoverflow.com/questions/3577922/how-to-link-a-gas-assembly-program-that-uses-the-c-standard-library-with-ld-with
; https://en.wikipedia.org/wiki/X86_assembly_language#Syntax
;
; Disassemble in intel syntax (help converting att to intel):
; objdump -d --disassembler-options=intel a.out
SECTION .data
ALIGN 4
ga: dd 10


SECTION .text
global main
main:
    push rbp
    mov rbp, rsp

    sub rsp, 16
    mov dword [rbp - 0x4], 0xa
    jmp while.cond.0

    while.top.0:
        mov r10d, dword [rbp - 4]
        sub r10d, 1
        mov dword [rbp - 4], r10d
    while.cond.0:
        mov r10d, dword [rbp - 4]
        cmp r10d, 0
        jne while.top.0

    mov r10d, dword [rbp - 4]
    add r10d, 2
    mov eax, r10d
    jmp end.main
    end.main:
    mov rsp, rbp
    pop rbp
    ret
