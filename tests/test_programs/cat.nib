import "std/linux" as lnx;

proc cat_fd(fd : s32) => int {
    var buf : [128]char = ---;
    var num_read : ssize;

    do {
        num_read = lnx::read(fd, buf, #length(buf));

        if (num_read < 0) {
            return num_read;
        }

        var tot_num_written : ssize;

        while (tot_num_written < num_read) {
            var num_written := lnx::write(lnx::STDOUT, buf, num_read);

            if (num_written < 0) {
                return num_written;
            }

            tot_num_written += num_written;
        }

    } while(num_read > 0);

    return 0;
}

proc main(argc : s32, argv : ^^char) => int {
    for (var i : s32 = 1; i < argc; i += 1) {
        var fd := lnx::open(argv[i], lnx::O_RDONLY, 0);

        if (fd < 0) {
            return -1;
        }

        var ret := cat_fd(fd); 

        if (ret < 0) {
            lnx::close(fd);
            return -1;
        }

        lnx::close(fd);
    }

    return 0;
}

