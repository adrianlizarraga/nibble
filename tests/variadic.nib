proc add_variadic(offset : char, nums : ..int) => int {
    var i : usize = 0;
    var result : int = 0;

    while (i < nums.length) {
        result = result + nums[i];
        
        i = i + 1;
    }

    return result + offset;
}

struct Vec3 {
    x : int;
    y : int;
    z : int;
}

proc add_v3(vecs : ..Vec3) => Vec3 {
    var i : usize = 0;
    var r : Vec3;
    r.x = 0;
    r.y = 0;
    r.z = 0;

    while (i < vecs.length) {
        r.x = r.x + vecs[i].x;
        r.y = r.y + vecs[i].y;
        r.z = r.z + vecs[i].z;

        i = i + 1;
    }

    return r;
}

proc make_arr3(val : int) => [3]int {
    var arr3 : [3]int = {val, val, val};

    return arr3;
}

proc add_arr3(vecs : ..[3]int) => [3]int {
    var i : usize = 0;
    var r : [3]int;
    r[0] = 0;
    r[1] = 0;
    r[2] = 0;

    while (i < vecs.length) {
        r[0] = r[0] + vecs[i][0];
        r[1] = r[1] + vecs[i][1];
        r[2] = r[2] + vecs[i][2];

        i = i + 1;
    }

    return r;
}

proc add_any_ints(args : ..any) => int {
    var r : int = 0;

    var i : usize = 0;

    while (i < args.length) {
        if (args[i].type == #typeid(int)) {
            var val : int = *(args[i].ptr :> ^int);
            r = r + val;
        }
        else if (args[i].type == #typeid([3]int)) {
            var arr3 : [3]int = *(args[i].ptr :> ^[3]int);
            r = r + arr3[0] + arr3[1] + arr3[2];
        }

        i = i + 1;
    }

    return r;
}

proc main() => int {
    var r := add_variadic(6, 1, 2, 3);
    var r2 := add_variadic(4);

    var a : Vec3;
    a.x = 1; a.y = 2; a.z = 3;
    var b : Vec3 = a;
    var c : Vec3 = b;

    var v := add_v3(a, b, c);

    var arr1 : [3]int;
    arr1[0] = -1; arr1[1] = -2; arr1[2] = 4;
    var arr2 := arr1;
    var arr3 := arr2;

    var arr4 := add_arr3(arr1, arr2, arr3, make_arr3(1));

    var int1 : int = 1;

    // 12 + + 4 + 18 + (1 + 2 + 2 + 1 + 3) + (-2 + -5 + 13) = 49
    return r + r2 + (v.x + v.y + v.z) + add_any_ints(int1, 2, int1 + 1, int1 == 1, 'a', make_arr3(1)) + (arr4[0] + arr4[1] + arr4[2]);
}
